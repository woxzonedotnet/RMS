<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="cmbLocation.Data" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE5TeXN0ZW0uRGF0YSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
        PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAABVTeXN0ZW0uRGF0YS5E
        YXRhVGFibGUDAAAAGURhdGFUYWJsZS5SZW1vdGluZ1ZlcnNpb24JWG1sU2NoZW1hC1htbERpZmZHcmFt
        AwEBDlN5c3RlbS5WZXJzaW9uAgAAAAkDAAAABgQAAAD1Azw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rp
        bmc9InV0Zi0xNiI/Pg0KPHhzOnNjaGVtYSB4bWxucz0iIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5v
        cmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4
        bWwtbXNkYXRhIj4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iVGFibGUxIj4NCiAgICA8eHM6Y29tcGxleFR5
        cGU+DQogICAgPC94czpjb21wbGV4VHlwZT4NCiAgPC94czplbGVtZW50Pg0KICA8eHM6ZWxlbWVudCBu
        YW1lPSJ0bXBEYXRhU2V0IiBtc2RhdGE6SXNEYXRhU2V0PSJ0cnVlIiBtc2RhdGE6TWFpbkRhdGFUYWJs
        ZT0iVGFibGUxIiBtc2RhdGE6VXNlQ3VycmVudExvY2FsZT0idHJ1ZSI+DQogICAgPHhzOmNvbXBsZXhU
        eXBlPg0KICAgICAgPHhzOmNob2ljZSBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIiAv
        Pg0KICAgIDwveHM6Y29tcGxleFR5cGU+DQogIDwveHM6ZWxlbWVudD4NCjwveHM6c2NoZW1hPgYFAAAA
        gAE8ZGlmZmdyOmRpZmZncmFtIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4
        bWwtbXNkYXRhIiB4bWxuczpkaWZmZ3I9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206eG1sLWRpZmZn
        cmFtLXYxIiAvPgQDAAAADlN5c3RlbS5WZXJzaW9uBAAAAAZfTWFqb3IGX01pbm9yBl9CdWlsZAlfUmV2
        aXNpb24AAAAACAgICAIAAAAAAAAA//////////8L
</value>
  </data>
  <metadata name="errL.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>